name: "ecs-deploy"

on:
  repository_dispatch:
    types:
      - ecs-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ap-northeast-1

      - name: Dynamodb scan
        uses: ./.github/actions/dynamodb-scan
        with:
          REPOSITORY: ${{ github.event.client_payload.REPOSITORY }}

      - name:  Download Amazon ECS task definition
        shell: bash
        run:   |
          aws ecs describe-task-definition --task-definition ${{ env.TASK }} --query taskDefinition > task-definition.json

      - name: Render Amazon ECS task definition
        id:   render-web-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name:  ${{ env.CONTAINER }}
          image:           "${{ env.ACCOUNT }}.dkr.ecr.ap-northeast-1.amazonaws.com/${{ env.REPOSITORY }}:${{ github.event.client_payload.TAG }}"

      - name:  Get latest of Amazon ECS task definition
        shell: bash
        run:   |
          arn=$(aws ecs list-task-definitions \
          --family-prefix ${{ env.TASK }} \
          --sort DESC --max-items 1 \
          --query 'taskDefinitionArns[0]' \
          --output text)
          echo arn
          values=${arn/task-definition/ }
          echo "TASK_DEFINITION=values[1]" >> $GITHUB_ENV

      - name: Slack post start
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "plain_text",
                    "text": "デプロイを開始しました。完了するまでしばらくお待ちください",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "```Cluster: ${{ env.CLUSTER }}\napp-service: ${{ env.SERVICE }}\ntask-definition: ${{ env.TASK_DEFINITION }}```"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Deploy to Amazon ECS service
        id:   deploy-web-container
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster:         ${{ env.CLUSTER }}
          service:         ${{ env.SERVICE }}
          task-definition: ${{ steps.render-web-container.outputs.task-definition }}
          wait-for-service-stability: true

      - name: Slack post result
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "plain_text",
                    "text": "デプロイが完了しました。"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
